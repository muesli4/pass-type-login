#!/bin/bash

# dependencies: libnotify, pass, xclip, xdotool, xmlstarlet

if [ -z "$PASSWORD_STORE" ]; then
    PASSWORD_STORE="$HOME/.password-store"
fi
PROMPT_DELAY_SECONDS=2
PREFIX=web/
WITH_LOGIN=0

unlock_failed() {
    echo "No password given." >&2
    exit 1
}

prompt_field() {
    notify-send -i info -t "${PROMPT_DELAY_SECONDS}000" "pass" "Select field for $1."
    sleep "${PROMPT_DELAY_SECONDS}s"
}

type_arg0() {
    xdotool type -- "$1"
}

print_usage() {
    echo 'Usage:'
    echo "    $0 ..."
    echo
    echo '    Type a password from pass.'
    echo
    echo '    --prefix PREFIX          The prefix to search in.'
    echo '    --pattern PATTERN        The pattern to search for.'
    echo '    --with-login             Additionally, type the login first.'
    echo '    --prompt-delay DELAY     The delay in seconds between the prompt'
    echo '                             and typing.'
    echo '    --password-store PATH    Override PASSWORD_STORE environment'
    echo '                             variable.'
    echo '    --help                   Display this help.'
}

while [ $# -gt 0 ]; do
    case "$1" in
        -l|--with-login)
            WITH_LOGIN=1
            ;;
        -d|--prompt-delay)
            shift
            PROMPT_DELAY_SECONDS="$1"
            ;;
        -p|--pattern)
            shift
            PATTERN="$1"
            ;;
        --prefix)
            shift
            PREFIX="$1"
            ;;
        -h|--help)
            print_usage
            exit 0
            ;;
        -s|--password-store)
            shift
            PASSWORD_STORE="$1"
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "Unknown argument: $1"
            print_usage
            exit 1
            ;;
    esac
    shift
done

if [ -z "$PREFIX" ]; then
    notify-send -i error -t 4000 'pass' 'Missing prefix.'
    exit 1
fi

if [ -z "$PATTERN" ]; then
    # read search pattern from clipboard
    PATTERN="$(xclip -o)"
    if [ -z "$PATTERN" ]; then
        notify-send -i error -t 4000 'pass' 'Read empty pattern from clipboard.'
        exit 1
    fi
fi

cd "$PASSWORD_STORE"

# lookup
GPG_PATH="$(find "$PREFIX" -type d -iname "*$PATTERN*" | head -n 1 | xargs -I '{}' find '{}' -type f | head -n 1)"

PASS_PATH="${GPG_PATH%.gpg}"

if [ -n "$PASS_PATH" ]; then

    echo "Using $PASS_PATH"

    USERNAME=`basename "$PASS_PATH"`

    # unlock gpg-agent beforehand (TODO with gpg?)
    pass show "$PASS_PATH" > /dev/null
    if [ $? -eq 0 ]; then
        # work around bug in xdotool: https://github.com/jordansissel/xdotool/issues/97
        # this may not work for all cases unfortunately
        setxkbmap

        # insert username if requested
        if [ "$WITH_LOGIN" == 1 ]; then
            prompt_field 'login'
            type_arg0 "$USERNAME"
        fi
        prompt_field 'password'
        type_arg0 "$(pass show "$PASS_PATH")"
    else
        unlock_failed
    fi

else
    notify-send \
        -i error \
        -t 4000 \
        "pass" \
        "No password found for search pattern:
        <i>'$(xmlstarlet escape "$PAT")'</i>."
    exit 1
fi
